{"/Users/01258615/go/src/github.com/77Vincent/IDEV/src/renderer/components/editor.jsx":{"name":"editor.jsx","content":"import * as React from 'react';\nimport { Box } from '@mui/material';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/matchtags';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/keymap/vim';\n\nimport '../theme/editor-dark.css';\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textareaNode = React.createRef();\n    this.state = {\n      content: '',\n    };\n  }\n\n  componentDidMount() {\n    const editor = CodeMirror.fromTextArea(this.textareaNode, {\n      mode: 'javascript',\n      lineNumbers: true,\n      theme: 'darcula',\n      autofocus: true,\n      autoCloseBrackets: true,\n      matchtags: true,\n      matchBrackets: true,\n      indentUnit: 4,\n      keyMap: 'vim',\n      extraKeys: {\n        'Cmd-/': (cm) => {\n          cm.execCommand('toggleComment');\n        },\n      },\n    });\n\n    editor.setValue(this.state.content);\n    editor.setSize('100%', '100%');\n\n    window.electron.ipcRenderer.on('EDITOR_LOAD_FILE', (args) => {\n      const { content } = args[0];\n      this.setState({ content });\n      editor.setValue(content);\n    });\n  }\n\n  render() {\n    return (\n      <Box overflow=\"auto\" flex={1}>\n        <textarea\n          ref={(ref) => {\n            this.textareaNode = ref;\n          }}\n        />\n      </Box>\n    );\n  }\n}\n"},"/Users/01258615/go/src/github.com/77Vincent/IDEV/src/renderer/components/tabs.jsx":{"name":"tabs.jsx","content":"import { Box, styled, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nconst Wrapper = styled('div')(({ theme }) => {\n  return {\n    borderBottomWidth: 1,\n    borderBottomStyle: 'solid',\n    borderBottomColor: theme.palette.grey[800],\n    width: '100%',\n    backgroundColor: 'rgba(50,50,50,0.5)',\n    backdropFilter: 'blur(20px)',\n    zIndex: 1,\n    position: 'absolute',\n    height: 24,\n  };\n});\n\nconst ActiveTab = styled('div')(({ theme }) => {\n  return {\n    backgroundColor: theme.palette.grey[600],\n    color: theme.palette.common.white,\n  };\n});\n\nconst StyledTab = styled('div')(({ theme }) => {\n  return {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[700],\n    },\n    cursor: 'pointer',\n  };\n});\n\nexport default () => {\n  const [openFileSession, setOpenFileSession] = useState('');\n  const [fileSessions, setFileSessions] = useState({});\n\n  useEffect(() => {\n    window.electron.ipcRenderer.on('RENDERER_OPEN_FILE', (args) => {\n      const { name, uri } = args[0];\n      setFileSessions((prevState) => {\n        return Object.assign(prevState, { [uri]: name });\n      });\n      setOpenFileSession(uri);\n    });\n  }, []);\n\n  const Tab = ({ name, uri }) => {\n    return (\n      <StyledTab>\n        <Box\n          height={24}\n          minWidth={75}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          paddingLeft={1}\n          paddingRight={1}\n          onClick={() => {\n            setOpenFileSession(uri);\n            window.electron.ipcRenderer.send('MAIN_LOAD_FILE', [uri]);\n          }}\n        >\n          <Typography variant=\"body2\">{name}</Typography>\n        </Box>\n      </StyledTab>\n    );\n  };\n\n  return (\n    <Wrapper>\n      <Box display=\"flex\">\n        {Object.keys(fileSessions).map((key) => {\n          const file = fileSessions[key];\n          return (\n            <Box key={key}>\n              {openFileSession === key ? (\n                <ActiveTab>\n                  <Tab uri={key} name={file} />\n                </ActiveTab>\n              ) : (\n                <Tab uri={key} name={file} />\n              )}\n            </Box>\n          );\n        })}\n      </Box>\n    </Wrapper>\n  );\n};\n"}}